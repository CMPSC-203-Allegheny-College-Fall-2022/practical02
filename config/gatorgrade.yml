# check the technical writing for various characteristics
- writing/reflection.md:
    - description: Ensure that reflection.md file exists in the writing/ directory
      check: ConfirmFileExists
    - description: Write a minimum number of meaningful words (80) in the reflection
      check: CountFileWords
      options:
        count: 80
        exact: false
    - description: Confirm that the markdown file has the correct number of headers
      check: CountMarkdownTags
      options:
        tag: heading
        count: 6
        exact: true
    - description: Complete all TODOs, remove the TODO markers in the reflection.md
      check: MatchFileFragment
      options:
        fragment: TODO
        count: 0
        exact: true
    - description: Delete the 'Add Your Name Here' prompt in the reflection file
      check: MatchFileFragment
      options:
        fragment: "Add Your Name Here"
        count: 0
        exact: true

# check GitHub Actions workflow setup
- .github/workflows/build.yml:
    - description: Ensure that build.yml file exists in the writing/ directory
      check: ConfirmFileExists
    - description: Write a minimum number of meaningful words (80) in the reflection
      check: CountFileWords
      options:
        count: 80
        exact: false
    - description: Complete all TODOs, remove the TODO markers in the reflection.md
      check: MatchFileFragment
      options:
        fragment: TODO
        count: 0
        exact: true
    - description: Add the 'Lint Markdown' for markdown job in the GitHub Actions workflow
      check: MatchFileFragment
      options:
        fragment: "name: Lint Markdown"
        count: 1
        exact: false
    - description: Add the 'Check Spelling' for spelling job in the GitHub Actions workflow
      check: MatchFileFragment
      options:
        fragment: "name: Check Spelling"
        count: 1
        exact: false
    - description: Add the 'Run Python' for python job in the GitHub Actions workflow
      check: MatchFileFragment
      options:
        fragment: "name: Run Python"
        count: 1
        exact: false
    - description: Add the 'Run GatorGrader' for gatorgrader job in the GitHub Actions workflow
      check: MatchFileFragment
      options:
        fragment: "name: Run GatorGrader"
        count: 1
        exact: false
    - description: Add the 'poetry install' for installing poetry in the GitHub Actions workflow
      check: MatchFileFragment
      options:
        fragment: "poetry install"
        count: 1
        exact: false
    - description: Add the check to run the test suite with poetry as 'poetry run pytest tests/test_permit_manager.py' in the GitHub Actions workflow
      check: MatchFileFragment
      options:
        fragment: "poetry run pytest tests/test_permit_manager.py"
        count: 1
        exact: true
    - description: Add the check to run the 'permit_manager.py' python program with poetry as 'poetry run python permit_manager.py' in the GitHub Actions workflow
      check: MatchFileFragment
      options:
        fragment: "poetry run python permit_manager.py"
        count: 1
        exact: true

# count number of commits in the GitHub repository
- description: Have at least a specific minimum number of commits (6) in repository
  check: CountCommits
  options:
    count: 6
